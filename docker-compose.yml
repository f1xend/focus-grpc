version: '3.5'

services:
  hat:
    build:
      context: ./
      dockerfile: docker/go/Dockerfile
    volumes:
      - ./:/GolangProjects/focus-grpc
    working_dir: /GolangProjects/focus-grpc
    entrypoint: make run_hat
    ports:
      - "8081:8081"
    env_file:
      - .env
    depends_on:
      migrations:
        condition: service_completed_successfully
    networks:
      - focus

  illusionist:
    build:
      context: ./
      dockerfile: docker/go/Dockerfile
    volumes:
      - ./:/GolangProjects/focus-grpc
    working_dir: /GolangProjects/focus-grpc
    entrypoint: tail -f /dev/null
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - focus

  pg_db:
    build: docker/pg_db
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "psql -U postgres -d animal -c 'select 1' | grep 1 || exit 1" ]
      interval: 30s
      retries: 5
      timeout: 10s
    networks:
      - focus

  migrations:
    build: docker/migrations
    volumes:
      - ./migrations:/GolangProjects/focus-grpc/migrations
    entrypoint: goose -dir=migrations postgres "host=pg_db user=postgres password=postgres dbname=animal sslmode=disable" up
    working_dir: /GolangProjects/focus-grpc
    depends_on:
      pg_db:
        condition: service_healthy
    networks:
      - focus

networks:
  focus:
    driver: bridge